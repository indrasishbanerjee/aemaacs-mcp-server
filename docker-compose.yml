version: '3.8'

services:
  aemaacs-mcp-read-server:
    build:
      context: .
      dockerfile: packages/read-server/Dockerfile
    container_name: aemaacs-mcp-read-server
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=production
      - READ_SERVER_PORT=3001
      - READ_SERVER_HOST=0.0.0.0
      - AEM_HOST=${AEM_HOST:-author.aemaacs.example.com}
      - AEM_PORT=${AEM_PORT:-443}
      - AEM_PROTOCOL=${AEM_PROTOCOL:-https}
      - AEM_USERNAME=${AEM_USERNAME}
      - AEM_PASSWORD=${AEM_PASSWORD}
      - AEM_CLIENT_ID=${AEM_CLIENT_ID}
      - AEM_CLIENT_SECRET=${AEM_CLIENT_SECRET}
      - AEM_ACCESS_TOKEN=${AEM_ACCESS_TOKEN}
      - LOG_LEVEL=${LOG_LEVEL:-info}
      - LOG_FORMAT=${LOG_FORMAT:-json}
      - CORS_ENABLED=${CORS_ENABLED:-true}
      - CORS_ORIGINS=${CORS_ORIGINS:-*}
      - RATE_LIMIT_ENABLED=${RATE_LIMIT_ENABLED:-true}
      - CACHE_ENABLED=${CACHE_ENABLED:-true}
      - REQUIRE_AUTH=${REQUIRE_AUTH:-false}
    volumes:
      - ./logs:/app/logs
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3001/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - aemaacs-network

  aemaacs-mcp-write-server:
    build:
      context: .
      dockerfile: packages/write-server/Dockerfile
    container_name: aemaacs-mcp-write-server
    ports:
      - "3002:3002"
    environment:
      - NODE_ENV=production
      - WRITE_SERVER_PORT=3002
      - WRITE_SERVER_HOST=0.0.0.0
      - AEM_HOST=${AEM_HOST:-author.aemaacs.example.com}
      - AEM_PORT=${AEM_PORT:-443}
      - AEM_PROTOCOL=${AEM_PROTOCOL:-https}
      - AEM_USERNAME=${AEM_USERNAME}
      - AEM_PASSWORD=${AEM_PASSWORD}
      - AEM_CLIENT_ID=${AEM_CLIENT_ID}
      - AEM_CLIENT_SECRET=${AEM_CLIENT_SECRET}
      - AEM_ACCESS_TOKEN=${AEM_ACCESS_TOKEN}
      - LOG_LEVEL=${LOG_LEVEL:-info}
      - LOG_FORMAT=${LOG_FORMAT:-json}
      - CORS_ENABLED=${CORS_ENABLED:-false}
      - RATE_LIMIT_ENABLED=${RATE_LIMIT_ENABLED:-true}
      - VALIDATION_STRICT=${VALIDATION_STRICT:-true}
      - ALLOW_DANGEROUS_OPERATIONS=${ALLOW_DANGEROUS_OPERATIONS:-false}
      - REQUIRE_AUTH=${REQUIRE_AUTH:-true}
      - API_KEYS=${API_KEYS}
      - WRITE_SERVER_API_KEY=${WRITE_SERVER_API_KEY}
    volumes:
      - ./logs:/app/logs
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3002/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - aemaacs-network

  redis:
    image: redis:7-alpine
    container_name: aemaacs-redis
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    restart: unless-stopped
    networks:
      - aemaacs-network
    command: redis-server --appendonly yes

networks:
  aemaacs-network:
    driver: bridge

volumes:
  redis-data:
    driver: local